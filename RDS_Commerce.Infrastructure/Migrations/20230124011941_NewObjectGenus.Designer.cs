// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RDS_Commerce.Infrastructure.ORM.ContextSettings;

#nullable disable

namespace RDSCommerce.Infrastructure.Migrations
{
    [DbContext(typeof(RdsApplicationDbContext))]
    [Migration("20230124011941_NewObjectGenus")]
    partial class NewObjectGenus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RDS_Commerce.Domain.Entities.Genus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Genus");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GenusName")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("genus_name");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Specie")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("specie");

                    b.HasKey("Id");

                    b.ToTable("Genus", "RDS");
                });

            modelBuilder.Entity("RDS_Commerce.Domain.Entities.Plant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_plant");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<string>("Description")
                        .IsUnicode(true)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    SqlServerPropertyBuilderExtensions.IsSparse(b.Property<string>("Description"));

                    b.Property<int?>("GenusId")
                        .HasColumnType("int")
                        .HasColumnName("genus_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("name");

                    b.Property<int>("PlantType")
                        .HasColumnType("int")
                        .HasColumnName("plant_type");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("price");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("registration_date");

                    b.Property<int>("VaseSize")
                        .HasColumnType("int")
                        .HasColumnName("vase_size");

                    b.HasKey("Id");

                    b.HasIndex("GenusId");

                    b.ToTable("Plant", "RDS");
                });

            modelBuilder.Entity("RDS_Commerce.Domain.Entities.PlantImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_fileImage");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("FileBytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("file_bytes");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("file_extension");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("file_name");

                    b.Property<bool>("MainImage")
                        .HasColumnType("bit")
                        .HasColumnName("main_image");

                    b.Property<int>("PlantId")
                        .HasColumnType("int")
                        .HasColumnName("plant_id");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("registration_date");

                    b.HasKey("Id");

                    b.HasIndex("PlantId");

                    b.ToTable("PlantImage", "RDS");
                });

            modelBuilder.Entity("RDS_Commerce.Domain.Entities.Plant", b =>
                {
                    b.HasOne("RDS_Commerce.Domain.Entities.Genus", "Genus")
                        .WithMany("Plants")
                        .HasForeignKey("GenusId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Genus");
                });

            modelBuilder.Entity("RDS_Commerce.Domain.Entities.PlantImage", b =>
                {
                    b.HasOne("RDS_Commerce.Domain.Entities.Plant", null)
                        .WithMany("Images")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RDS_Commerce.Domain.Entities.Genus", b =>
                {
                    b.Navigation("Plants");
                });

            modelBuilder.Entity("RDS_Commerce.Domain.Entities.Plant", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
